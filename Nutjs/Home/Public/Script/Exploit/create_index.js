/**
 * 构造方法。给指定标签添加前导数字并生成目录
 * @argument $element string 要做索引的标签名
 * */
function CreateIndex($element){
    //protected
    this.indexPrefix=[
        ['一、','二、','三、','四、','五、','六、','七、','八、','九、','十、','十一、','十二、','十三、','十四、','十五、','十六、']
        ,['1.','2.','3.','4.','5.','6.','7.','8.','9.']
        ,['① ','② ','③ ','④ ','⑤ ','⑥ ','⑦ ','⑧ ','⑨ ']
    ];//前导字符
    this.indexTag=['H1','H2','H3'];//参与索引的标签名
    this.element =$element||document.getElementsByTagName("*");//要遍历的标签集合
    this.navHtml='';//生成的目录
    //private
    this.indexIndex=[0,0,0];//标签索引数
    this.indexElt=[];//符合索引条件的标签列表
};
/**
 * 设置要进行索引的标签名，可接受一个数组或以逗号分隔的字符串
 *
 * @argument $tag_name string 要做索引的标签名
 * @returns this
 * */
CreateIndex.prototype.setIndexTagName=function ($tag_name){
    //判断是否是字符串，分割成数组
    if(typeof $tag_name === 'string') $tag_name=$tag_name.split(',');
    //将标签名转换成大写
    for(var i=0 ;i<$tag_name.length ;i++){
        $tag_name[i] =$tag_name[i].toUpperCase();
    };
    //赋值标签名
    this.indexTag=$tag_name;
    //初始化标签索引数
    this.indexIndex=[];
    for(var i=0 ;i<$tag_name.length ;i++){
        this.indexIndex.push(0);
    };
    //返回this
    return this;
};
/**
 * 开始遍历节点生成索引并加前导数字
 * @argument $no_prefix bool 不给节点添加前导数字
 * @return this
 * */
CreateIndex.prototype.createIndex=function ($no_prefix){
    //遍历所有标签
    for(var i=0 ;i<this.element.length ;i++){
        //遍历所有参与索引的标签名
        for(var v=0 ;v<this.indexTag.length ;v++){
            if (this.element[i].tagName == this.indexTag[v]) {
                //索引前导的类型
                var indexType=this.indexPrefix[v];
                //加前导
                if(!$no_prefix){
                    this.element[i].innerHTML =(indexType[this.indexIndex[v]] + this.element[i].innerHTML);
                }
                //索引++
                this.indexIndex[v]++;
                //初始化所有子级索引
                for(var j=v+1 ;j<this.indexIndex.length ;j++){
                    this.indexIndex[j]=0;
                };
                //记录节点
                this.indexElt.push(this.element[i]);
            };
        };
    };
    //返回this
    return this;
};
/**
 * createNav 生成目录
 * @return this
 * */
CreateIndex.prototype.createNav=function (){
    //遍历所有记录的节点
    for(var i=0 ;i<this.indexElt.length ;i++){
        //缩进的数量
        var testIndex=0;
        //获取缩进量
        for(var v=0 ;v<this.indexTag.length ;v++){
            if (this.indexElt[i].tagName == this.indexTag[v]) {
                testIndex = 2*v;
                break;
            };
        };
        //生成html
        this.navHtml +='<li style="list-style-type:none;margin-left:'+testIndex+'em;">'+this.indexElt[i].innerHTML+"</li>\n";
    }
    //返回this
    return this;
};
/**
 * 生成目录
 * @returns String 生成的目录
 * */
CreateIndex.prototype.getNav=function (){
    return this.navHtml;
};